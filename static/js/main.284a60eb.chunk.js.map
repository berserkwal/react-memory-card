{"version":3,"sources":["components/Card.js","components/Loading.js","components/Gameboard.js","components/Dropdown.js","components/Header.js","components/Scoreboard.js","App.js","hooks/useGameState.js","index.js"],"names":["Card","props","className","onClick","selectCard","name","src","id","alt","replaceAll","types","map","item","type","Loading","currentLevel","Gameboard","cards","pokeData","isLoading","Dropdown","target","rel","href","Header","useState","isHovered","setIsHovered","disableHover","onMouseLeave","onMouseEnter","Scoreboard","currentScore","bestScore","App","lev","count","levels","setIsLoading","isLoadingNextLevel","setIsLoadingNextLevel","setPokeData","selectedCards","setSelectedCards","setCurrentScore","setCurrentLevel","localStorage","getItem","setBestScore","cpData","setCpData","usedID","setUsedID","useEffect","length","prevState","getRandom","random","Math","floor","includes","i","fetch","then","res","json","data","prevData","setItem","useGameState","increment","array","randomIndex","currentIndex","shuffleCards","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.284a60eb.chunk.js","sourcesContent":["function Card(props) {\n  return (\n    <div className='card-wrapper' onClick={() => props.selectCard(props.name)}>\n      <img\n        src={`https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/other/official-artwork/${props.id}.png`}\n        alt={props.name}\n      />\n      <h3>{props.name.replaceAll('-', ' ')}</h3>\n      <div className='types'>\n        {props.types.map((item) => (\n          <p className={`type ${item.type.name}`} key={item.type.name}>\n            {item.type.name}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Card;\n","function Loading(props) {\n  return (\n    <div className='loading'>\n      <img\n        src='https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Pok%C3%A9_Ball_icon.svg/240px-Pok%C3%A9_Ball_icon.svg.png'\n        alt=''\n      />{' '}\n      <h3>Loading Level {props.currentLevel}</h3>\n    </div>\n  );\n}\n\nexport default Loading;\n","import Card from './Card';\nimport Loading from './Loading';\n\nfunction Gameboard(props) {\n  const cards = props.pokeData.map((item) => (\n    <Card\n      id={item.id}\n      name={item.name}\n      key={item.id}\n      types={item.types}\n      selectCard={props.selectCard}\n    />\n  ));\n\n  return (\n    <div className='gameboard'>\n      {props.isLoading ? <Loading currentLevel={props.currentLevel} /> : cards}\n    </div>\n  );\n}\n\nexport default Gameboard;\n","function Dropdown(props) {\n  return (\n    <div className='dropMenu'>\n      <a target='_blank' rel='noreferrer' href='https://berserkwal.github.io'>\n        <i className='fas fa-external-link-alt'></i>\n        <span>My Website</span>\n      </a>\n      <a\n        target='_blank'\n        rel='noreferrer'\n        href='https://www.github.com/berserkwal/react-memory-card'>\n        <i className='fas fa-external-link-alt'></i>\n        <span>Project Source Code</span>\n      </a>\n      <a target='_blank' rel='noreferrer' href='https://pokeapi.co/'>\n        <i className='fas fa-external-link-alt'></i>\n        <span>Powered by PokeAPI</span>\n      </a>\n    </div>\n  );\n}\n\nexport default Dropdown;\n","import { useState } from 'react';\nimport Dropdown from './Dropdown';\n\nfunction Header() {\n  const [isHovered, setIsHovered] = useState(false);\n\n  const enableHover = () => setIsHovered(true);\n  const disableHover = () => setIsHovered(false);\n\n  return (\n    <header>\n      <div className='logo-wrapper'>\n        <img\n          className='logo-img'\n          src='https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Pok%C3%A9_Ball_icon.svg/240px-Pok%C3%A9_Ball_icon.svg.png'\n          alt=''\n        />\n        <h2 className='logo-text'>Pok√©mon Memory Game</h2>\n      </div>\n      <nav className='nav' onMouseLeave={disableHover}>\n        made by{' '}\n        <span onMouseEnter={enableHover}>\n          berserkwal <i className='fas fa-caret-down'></i>{' '}\n        </span>\n        <div className='hiddenZone'></div>\n        {isHovered ? <Dropdown disableHover={disableHover} /> : null}\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","function Scoreboard(props) {\n  return (\n    <div className='board-wrapper'>\n      <h3 className='board-level'>Level: {props.currentLevel}</h3>\n      <div className='board-score'>\n        <h3 className='score-current'>Current Score: {props.currentScore}</h3>\n        <h3 className='score-best'>Best Score: {props.bestScore}</h3>\n      </div>\n    </div>\n  );\n}\n\nexport default Scoreboard;\n","// import { useEffect, useState } from 'react';\nimport Gameboard from './components/Gameboard';\nimport Header from './components/Header';\n// import IncClrTest from './components/IncClrTest';\nimport Scoreboard from './components/Scoreboard';\nimport { useGameState } from './hooks/useGameState';\n\nfunction App() {\n  const [\n    currentScore,\n    bestScore,\n    currentLevel,\n    cpData,\n    isLoading,\n    selectedCards,\n    setCurrentLevel,\n    setBestScore,\n    setCurrentScore,\n    setIsLoadingNextLevel,\n    setSelectedCards,\n    setCpData,\n  ] = useGameState();\n\n  const shuffleCards = (array) => {\n    let currentIndex = array.length;\n    let randomIndex;\n\n    while (currentIndex !== 0) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex--;\n\n      [array[currentIndex], array[randomIndex]] = [\n        array[randomIndex],\n        array[currentIndex],\n      ];\n    }\n\n    return array;\n  };\n\n  const increment = (name) => {\n    setCurrentScore((prevState) => prevState + 1);\n    setSelectedCards((prevState) => [...prevState, name]);\n    setCpData((prevState) => shuffleCards([...prevState]));\n  };\n\n  const clear = () => {\n    if (currentScore > bestScore) {\n      setBestScore(currentScore);\n    }\n    setCurrentLevel(1);\n    setIsLoadingNextLevel(true);\n    setCurrentScore(0);\n  };\n\n  const selectCard = (name) => {\n    if (selectedCards.includes(name)) {\n      clear();\n    } else {\n      increment(name);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <Header />\n      <Scoreboard\n        currentScore={currentScore}\n        bestScore={bestScore}\n        currentLevel={currentLevel}\n      />\n      {/* <IncClrTest increment={increment} clear={clear} /> */}\n      <Gameboard\n        selectCard={selectCard}\n        pokeData={cpData}\n        isLoading={isLoading}\n        currentLevel={currentLevel}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import { useState, useEffect } from 'react';\n\nexport const useGameState = () => {\n  const [levels] = useState([\n    { lev: 1, count: 4 },\n    { lev: 2, count: 6 },\n    { lev: 3, count: 8 },\n    { lev: 4, count: 10 },\n    { lev: 5, count: 12 },\n  ]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingNextLevel, setIsLoadingNextLevel] = useState(true);\n  const [pokeData, setPokeData] = useState([]);\n  const [selectedCards, setSelectedCards] = useState([]);\n  const [currentScore, setCurrentScore] = useState(0);\n  const [currentLevel, setCurrentLevel] = useState(1);\n  const [bestScore, setBestScore] = useState(\n    () => localStorage.getItem('bestScore') || 0\n  );\n  const [cpData, setCpData] = useState([]);\n  const [usedID, setUsedID] = useState([]);\n\n  useEffect(() => {\n    if (\n      selectedCards.length === levels[currentLevel - 1].count &&\n      currentLevel < 5\n    ) {\n      setIsLoadingNextLevel(true);\n      setCurrentLevel((prevState) => prevState + 1);\n    }\n    // eslint-disable-next-line\n  }, [selectedCards]);\n\n  const getRandom = () => {\n    while (true) {\n      const random = Math.floor(Math.random() * 898) + 1;\n      if (!usedID.includes(random)) return random;\n    }\n  };\n\n  useEffect(() => {\n    if (currentScore === 0 || (currentLevel > 1 && isLoadingNextLevel)) {\n      setIsLoading(true);\n      setPokeData([]);\n      setSelectedCards([]);\n      for (let i = 0; i < levels[currentLevel - 1].count; i++) {\n        fetch(`https://pokeapi.co/api/v2/pokemon/${getRandom()}`)\n          .then((res) => {\n            return res.json();\n          })\n          .then((data) => {\n            setPokeData((prevData) => [\n              ...prevData,\n              {\n                id: data.id,\n                name: data.name,\n                types: data.types,\n              },\n            ]);\n            setUsedID((prevState) => [...prevState, data.id]);\n          });\n      }\n    }\n    // eslint-disable-next-line\n  }, [currentLevel, currentScore]);\n\n  useEffect(() => {\n    if (pokeData.length === levels[currentLevel - 1].count) {\n      setCpData([...pokeData]);\n      setIsLoading(false);\n      setIsLoadingNextLevel(false);\n      setUsedID([]);\n    }\n    // eslint-disable-next-line\n  }, [pokeData]);\n\n  useEffect(() => {\n    localStorage.setItem('bestScore', bestScore);\n  }, [bestScore]);\n\n  return [\n    currentScore,\n    bestScore,\n    currentLevel,\n    cpData,\n    isLoading,\n    selectedCards,\n    setCurrentLevel,\n    setBestScore,\n    setCurrentScore,\n    setIsLoadingNextLevel,\n    setSelectedCards,\n    setCpData,\n  ];\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './global.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}